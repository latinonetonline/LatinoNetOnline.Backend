name: Deploy To New Server

on:
  workflow_run:
    workflows: [Deploy]
    types: [completed]
    
  workflow_dispatch:
  
jobs:
  on-success:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' ||  github.event_name == 'workflow_dispatch' }}
    steps:
      - run: echo 'The triggering workflow passed'
      
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      

      - name: Create symbolic link Api DockerFile
        run: cp "src/Bootstrapper/LatinoNetOnline.Backend.Bootstrapper/Dockerfile" "Dockerfile"
     

      - name: Copy AivenWeb Packages
        run: cp -r offline-packages packages
        
      - name: Publish
        working-directory: "./src/Bootstrapper/LatinoNetOnline.Backend.Bootstrapper"
        run: dotnet publish "LatinoNetOnline.Backend.Bootstrapper.csproj" --no-restore -c Release -o "./app/publish" 
        
        
      - name: Set ConnectionString JSON Field
        uses: jossef/action-set-json-field@v1
        with:
          file: "src/Bootstrapper/LatinoNetOnline.Backend.Bootstrapper/app/publish/appsettings.json"
          field: "ConnectionStrings.Default"
          value: ${{ secrets.CONNECTION_STRING }}

          
      - name: Set GitHub Token JSON Field
        uses: jossef/action-set-json-field@v1
        with:
          file: "src/Bootstrapper/LatinoNetOnline.Backend.Bootstrapper/app/publish/appsettings.json"
          field: "GitHubOptions.Token"
          value: ${{ secrets.GH_TOKEN }}
          
      - name: Set Google Secret JSON Field
        uses: jossef/action-set-json-field@v1
        with:
          file: "src/Bootstrapper/LatinoNetOnline.Backend.Bootstrapper/app/publish/appsettings.json"
          field: "GoogleOptions.ClientSecret"
          value: ${{ secrets.GOOGLE_SECRET }}

      - name: Set Mailjet Secret JSON Field
        uses: jossef/action-set-json-field@v1
        with:
          file: "src/Bootstrapper/LatinoNetOnline.Backend.Bootstrapper/app/publish/appsettings.json"
          field: "MailjetOptions.ClientSecret"
          value: ${{ secrets.MAILJET_SECRET }}

      - name: Set Identity Secret JSON Field
        uses: jossef/action-set-json-field@v1
        with:
          file: "src/Bootstrapper/LatinoNetOnline.Backend.Bootstrapper/app/publish/appsettings.json"
          field: "IdentityOptions.ClientSecret"
          value: ${{ secrets.IDENTITY_CLIENT_SECRET }}


      - name: Set Identity Default Password JSON Field
        uses: jossef/action-set-json-field@v1
        with:
          file: "src/Bootstrapper/LatinoNetOnline.Backend.Bootstrapper/app/publish/appsettings.json"
          field: "IdentityOptions.Password"
          value: ${{ secrets.IDENTITY_DEFAULT_PASSWORD }}
          
          
      - name: Zip Release
        uses: TheDoctor0/zip-release@0.6.0
        with:
          # Filename for archive
          filename: "release.zip"
          # Base path for archive files
          #path: "."
          # Working directory before zipping
          directory: "./src/Bootstrapper/LatinoNetOnline.Backend.Bootstrapper/app/publish"
          
        
      
      - name: Upload Release.zip to Server
        uses: cross-the-world/ssh-scp-ssh-pipelines@latest
        with:
          # ssh remote host
          host: api.latinonet.online
          # ssh remote port
          port: 22
          # ssh remote user
          user: latinonetonline
          # ssh remote password
          pass: ${{ secrets.SSH_PASSWORD }}

          #first_ssh
          first_ssh: rm -f deployments/webapi/release.zip && rm -rf deployments/webapi/release
              
          # scp from local to remote
          scp: |
            './src/Bootstrapper/LatinoNetOnline.Backend.Bootstrapper/app/publish/release.zip' => deployments/webapi
          # execute post-commands after scp
          last_ssh: sudo systemctl stop kestrel-webapi.service && unzip deployments/webapi/release.zip -d deployments/webapi/release && sudo systemctl start kestrel-webapi.service

    
          
          
